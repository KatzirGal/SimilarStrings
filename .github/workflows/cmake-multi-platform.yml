name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    # Ensure required dependencies for Poco
    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
        echo "poco-build-dir=${{ github.workspace }}/Dependencies/CMAKE_BUILD" >> "$GITHUB_OUTPUT"
        if [[ "$RUNNER_OS" == "Linux" ]]; then
          echo "poco-install-dir=${{ github.workspace }}/Dependencies/CMAKE_BUILD/install/${{ matrix.build_type }}/lib/cmake/Poco" >> "$GITHUB_OUTPUT"
        else
          echo "poco-install-dir=${{ github.workspace }}/Dependencies/CMAKE_BUILD/install/${{ matrix.build_type }}/cmake" >> "$GITHUB_OUTPUT"
        fi

    # Step to build Poco first before configuring the main project
    - name: Build Poco
      run: |
        cmake -B ${{ steps.strings.outputs.poco-build-dir }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -S ${{ github.workspace }}/Dependencies
        cmake --build ${{ steps.strings.outputs.poco-build-dir }} --config ${{ matrix.build_type }} --target Poco

    # Verify Poco built successfully
    - name: Verify Poco Installation
      run: |
        echo "Checking Poco installation..."
        if [[ "$RUNNER_OS" == "Linux" ]]; then
          ls -l ${{ steps.strings.outputs.poco-install-dir }} || echo "Poco not found!"
          find ${{ steps.strings.outputs.poco-install-dir }} -name "PocoConfig.cmake" || echo "PocoConfig.cmake missing!"
        else
          dir "${{ steps.strings.outputs.poco-install-dir }}" || echo "Poco not found!"
          gci -Path "${{ steps.strings.outputs.poco-install-dir }}" -Recurse -Filter "PocoConfig.cmake" || echo "PocoConfig.cmake missing!"
        fi

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DCMAKE_PREFIX_PATH=${{ steps.strings.outputs.poco-install-dir }}
        -DPoco_DIR=${{ steps.strings.outputs.poco-install-dir }}
        -DPocoFoundation_DIR=${{ steps.strings.outputs.poco-install-dir }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
